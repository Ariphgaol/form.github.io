#  Basic configuration
user nginx;
worker_processes  1;
error_log /dev/stderr info;
pid /var/run/nginx.pid;

events {
    worker_connections  1024;
}

env BASE_URL;
env SOCKETS_URL;
env PORT;

http {
    # Standard HTTP configuration with slight hardening
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log /dev/stdout;
    sendfile on;
    keepalive_timeout  65;
    server_tokens off;

    #Websockets Server
    server {
      listen 80;
      listen 443 ssl;

      server_name ${SOCKETS_URL:localhost};

      # TLS configuration hardened according to:
      # https://bettercrypto.org/static/applied-crypto-hardening.pdf
      ssl_protocols TLSv1.1 TLSv1.2;
      ssl_ciphers 'EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA256:EECDH:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!IDEA:!ECDSA:kEDH:CAMELLIA128-SHA:AES128-SHA';
      ssl_prefer_server_ciphers on;
      ssl_session_timeout 5m;
      ssl_session_cache shared:SSL:50m;
      ssl_certificate /certs/cert.pem;
      ssl_certificate_key /certs/key.pem;

      add_header Strict-Transport-Security max-age=15768000;

      if ($scheme = http) {
        return 301 https://$host$request_uri;
      }

      location / {
        proxy_pass http://$BIND_ADDRESS:$SOCKETS_PORT;
        proxy_read_timeout 90;

        proxy_set_header Host $host ;
        proxy_set_header X-Real-IP $remote_addr ;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
      }   
    }

    server {
      listen 80;
      listen 443 ssl;

      server_name ${BASE_URL:localhost};

      # TLS configuration hardened according to:
      # https://bettercrypto.org/static/applied-crypto-hardening.pdf
      ssl_protocols TLSv1.1 TLSv1.2;
      ssl_ciphers 'EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA256:EECDH:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!IDEA:!ECDSA:kEDH:CAMELLIA128-SHA:AES128-SHA';
      ssl_prefer_server_ciphers on;
      ssl_session_timeout 5m;
      ssl_session_cache shared:SSL:50m;
      ssl_certificate /certs/cert.pem;
      ssl_certificate_key /certs/key.pem;

      add_header Strict-Transport-Security max-age=15768000;

      if ($scheme = http) {
        return 301 https://$host$request_uri;
      }

      root /usr/share/nginx/html;
      index index.html index.htm;
  
      location / { 
        proxy_pass http://$BINDING_ADDRESS:$PORT; 
        proxy_redirect off;
        proxy_set_header Host $host ;
        proxy_set_header X-Real-IP $remote_addr ;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Prerender-Token e2kvu08eXy8iD08bEk6D;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
      }
      
      location ~ /.well-known {
        allow all;
      } 
    }
}
